{"version":3,"sources":["redux/actions/codeActions.js","redux/actions/types.js","components/Topbar.js","components/InputField.js","components/OutputField.js","components/CodeEditor.js","redux/reducers/codeReducer.js","redux/reducers/index.js","redux/store.js","components/pages/Landing.js","App.js","index.js"],"names":["changeLanguage","lang","dispatch","type","payload","Option","Select","Topbar","handleChange","value","props","this","loading","language","className","id","onClick","compileCode","LoadingOutlined","defaultValue","style","width","onChange","dropdownStyle","background","color","Component","connect","state","code","InputField","placeholder","OutputField","output","readOnly","nextProps","prevState","CodeEditor","mode","input","showNortification","msg","Noty","theme","layout","text","timeout","show","setCode","e","setState","target","prevProps","status","options","styleActiveLine","styleActiveSelected","lineNumbers","onBeforeChange","editor","data","error","inputData","getState","a","console","log","axios","post","res","message","initialState","combineReducers","action","localStorage","setItem","sessionStorage","getItem","middlewares","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","history","useHistory","useState","setLang","onSubmit","preventDefault","push","App","exact","path","component","Landing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f3fb2cb.chunk.js","sourcesContent":["import { CODE_COMPILED, LOADING_CODE, CODE_FAILED, CHANGE_LANG, SET_CODE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const compileCode = (code, inputData) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: LOADING_CODE\r\n    })\r\n    try {\r\n        const data = {\r\n            code,\r\n            input: inputData ? inputData : '',\r\n            language: getState().code.language\r\n        }\r\n        console.log(getState().language)\r\n        const res = await axios.post('http://localhost:5000/compile', data);\r\n        dispatch({\r\n            type: CODE_COMPILED,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_FAILED,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeLanguage = (lang) => dispatch => {\r\n    dispatch(\r\n        { type: CHANGE_LANG, payload: lang }\r\n    )\r\n}\r\n\r\nexport const setCode = (code, input) => dispatch => {\r\n    dispatch(\r\n        { type: SET_CODE, payload: { code, input } }\r\n    )\r\n}","export const CODE_COMPILED = 'CODE_COMPILED';\r\nexport const LOADING_CODE = 'LOADING_CODE';\r\nexport const CODE_FAILED = 'CODE_FAILED';\r\nexport const CHANGE_LANG = 'CHANGE_LANG';\r\nexport const SET_CODE = 'SET_CODE';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Select } from 'antd';\r\nimport { changeLanguage } from '../redux/actions/codeActions';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Topbar extends Component {\r\n\r\n    handleChange = (value) => {\r\n        this.props.changeLanguage(value);\r\n    }\r\n    render() {\r\n        const { loading, language } = this.props;\r\n        return (\r\n            <div className=\"topbar-wrapper\">\r\n                <div className=\"topbar\">\r\n                    <button id=\"compile\" onClick={this.props.compileCode}>\r\n                        {loading ? (\r\n                            <>\r\n                                <LoadingOutlined className=\"loading\" />\r\n                                Compiling\r\n                            </>\r\n                        ) : (\r\n                                \"Compile\"\r\n                            )}\r\n                    </button>\r\n                    <Select defaultValue={language} style={{ width: 140 }} onChange={this.handleChange} dropdownStyle={{ background: '#252f35', color: 'white' }}>\r\n                        <Option value=\"C\" className=\"option\">C</Option>\r\n                        <Option value=\"C++\" className=\"option\">C++</Option>\r\n                        <Option value=\"Py\" className=\"option\">Python</Option>\r\n                        <Option value=\"C#\" className=\"option\">C Sharp</Option>\r\n                    </Select>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getStateFromProps = (state) => ({\r\n    loading: state.code.loading,\r\n    language: state.code.language\r\n})\r\n\r\nexport default connect(getStateFromProps, { changeLanguage })(Topbar);","import React, { Component } from 'react';\r\n\r\nexport default class InputField extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputContainer\">\r\n                <textarea className=\"textarea\" value={this.props.value} onChange={this.props.handleChange} placeholder=\"Enter input\"></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass OutputField extends Component {\r\n    state = {\r\n        output: ''\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.output !== prevState.output) {\r\n            return {\r\n                output: nextProps.output\r\n            }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { output } = this.state;\r\n        return (\r\n            <div className=\"inputContainer\">\r\n                <textarea className=\"textarea\" value={output} placeholder=\"Output\" readOnly>\r\n                </textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    output: state.code.output.output\r\n})\r\n\r\nexport default connect(mapStateToProps)(OutputField);","import React, { Component } from 'react'\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport Topbar from './Topbar';\r\nimport InputField from './InputField';\r\nimport OutputField from './OutputField';\r\nimport { connect } from 'react-redux';\r\nimport { compileCode, setCode } from '../redux/actions/codeActions';\r\n\r\nimport Noty from 'noty';\r\nimport 'noty/lib/noty.css';\r\nimport 'noty/lib/themes/bootstrap-v4.css';\r\n\r\n\r\nimport 'codemirror/mode/python/python';\r\nimport 'codemirror/mode/clike/clike';\r\n\r\n\r\n\r\nclass CodeEditor extends Component {\r\n    state = {\r\n        code: '',\r\n        mode: '',\r\n        input: ''\r\n    }\r\n\r\n    showNortification = (type, msg) => {\r\n        new Noty({\r\n            type,\r\n            theme: 'bootstrap-v4',\r\n            layout: 'topRight',\r\n            text: msg,\r\n            timeout: 3000\r\n        }).show();\r\n    }\r\n\r\n    compileCode = () => {\r\n        this.props.setCode(this.state.code, this.state.input);\r\n        this.props.compileCode(this.state.code, this.state.input)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { language } = this.props;\r\n        if (language === 'Py') {\r\n            this.setState({ mode: 'python' })\r\n        } else if (language === 'C++') {\r\n            this.setState({ mode: 'text/x-c++src' })\r\n        } else if (language === 'C') {\r\n            this.setState({ mode: 'text/x-csrc' })\r\n        } else if (language === 'C#') {\r\n            this.setState({ mode: 'text/x-csharp' })\r\n        }\r\n\r\n        if (this.props.code) {\r\n            this.setState({ code: this.props.code });\r\n        }\r\n        if (this.props.input) {\r\n            this.setState({ input: this.props.input });\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.output !== this.props.output) {\r\n            if (this.props.output.status === 'success') {\r\n                this.showNortification('success', 'Code compiled successfully');\r\n            } else {\r\n                this.showNortification('error', 'Failed to compile')\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState(\r\n            { input: e.target.value }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor\">\r\n                <Topbar compileCode={this.compileCode} />\r\n                <div className=\"code-wrapper\">\r\n                    <CodeMirror\r\n                        value={this.state.code}\r\n                        options={{\r\n                            mode: this.state.mode,\r\n                            styleActiveLine: true,\r\n                            styleActiveSelected: true,\r\n                            theme: 'material',\r\n                            lineNumbers: true\r\n                        }}\r\n                        onBeforeChange={(editor, data, value) => {\r\n                            this.setState({ code: value });\r\n                        }}\r\n                        onChange={(editor, data, value) => {\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <InputField handleChange={this.handleChange} value={this.state.input} />\r\n                    <OutputField />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.code.error,\r\n    language: state.code.language,\r\n    code: state.code.code,\r\n    output: state.code.output,\r\n    input: state.code.input\r\n})\r\n\r\n// export default CodeEditor;\r\nexport default connect(mapStateToProps, { compileCode, setCode })(CodeEditor);","import { CODE_COMPILED, LOADING_CODE, CODE_FAILED, CHANGE_LANG, SET_CODE } from '../actions/types';\r\nconst initialState = {\r\n    code: '',\r\n    input: '',\r\n    output: {},\r\n    loading: false,\r\n    error: null,\r\n    language: 'Py'\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING_CODE:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case CODE_COMPILED:\r\n            return {\r\n                ...state,\r\n                output: action.payload,\r\n                loading: false\r\n            }\r\n        case CODE_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        case CHANGE_LANG:\r\n            localStorage.setItem('lang', action.payload)\r\n            return {\r\n                ...state,\r\n                language: action.payload\r\n            }\r\n        case SET_CODE:\r\n            sessionStorage.setItem('code', action.payload.code)\r\n            sessionStorage.setItem('input', action.payload.input)\r\n            return {\r\n                ...state,\r\n                code: action.payload\r\n            }\r\n        default:\r\n            const lang = localStorage.getItem('lang');\r\n            const code = sessionStorage.getItem('code');\r\n            const input = sessionStorage.getItem('input');\r\n            return {\r\n                ...state,\r\n                language: lang ? lang : 'Py',\r\n                code: code ? code : '',\r\n                input: input ? input : ''\r\n            }\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport codeReducer from './codeReducer';\r\n\r\nexport default combineReducers({\r\n    code: codeReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst initialState = {}\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middlewares),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { changeLanguage } from '../../redux/actions/codeActions';\r\nimport { Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst Landing = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [lang, setLang] = useState('');\r\n\r\n    const handleChange = (value) => {\r\n        setLang(value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.changeLanguage(lang);\r\n        history.push('/code');\r\n    }\r\n\r\n    return (\r\n        <div className=\"landing\">\r\n            <div className=\"landing-header\">\r\n                <h1>CodeStock</h1>\r\n            </div>\r\n            <div className=\"landing-form\">\r\n                <div className=\"form-desc\">\r\n                    <h1>WELCOME TO CODESTOCK</h1>\r\n                    <p>Write code | Share code | Learn code</p>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Select defaultValue=\"Py\" onChange={handleChange} dropdownStyle={{ background: '#252f35', color: 'white' }} className=\"select-drop\">\r\n                        <Option value=\"C\" className=\"option\">C</Option>\r\n                        <Option value=\"C++\" className=\"option\">C++</Option>\r\n                        <Option value=\"Py\" className=\"option\">Python</Option>\r\n                        <Option value=\"C#\" className=\"option\">C Sharp</Option>\r\n                    </Select>\r\n                    <button type=\"submit\">Code Now</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"landing-footer\">\r\n                <p>Made with love by Abhi</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { changeLanguage })(Landing);","import React from 'react';\nimport './App.css';\nimport CodeEditor from './components/CodeEditor';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './components/pages/Landing';\n\nimport 'antd/dist/antd.css';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <div className=\"main\">\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/code\" component={CodeEditor} />\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}